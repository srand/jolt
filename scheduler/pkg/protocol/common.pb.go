// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: jolt/common.proto

package protocol

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogLevel int32

const (
	// Used for exception callstacks
	LogLevel_EXCEPTION LogLevel = 0
	// Debug information that is not of interest to most users.
	LogLevel_DEBUG LogLevel = 1
	// Extra information that is of interest to some users.
	LogLevel_VERBOSE LogLevel = 2
	// Normal information that is of interest to most users.
	LogLevel_INFO LogLevel = 3
	// Standard output from an executed command.
	LogLevel_STDOUT LogLevel = 4
	// An error that may be of interest to a user.
	LogLevel_WARNING LogLevel = 5
	// An error that is of interest to most users.
	LogLevel_ERROR LogLevel = 6
	// Standard error output from an executed command.
	LogLevel_STDERR LogLevel = 7
)

// Enum value maps for LogLevel.
var (
	LogLevel_name = map[int32]string{
		0: "EXCEPTION",
		1: "DEBUG",
		2: "VERBOSE",
		3: "INFO",
		4: "STDOUT",
		5: "WARNING",
		6: "ERROR",
		7: "STDERR",
	}
	LogLevel_value = map[string]int32{
		"EXCEPTION": 0,
		"DEBUG":     1,
		"VERBOSE":   2,
		"INFO":      3,
		"STDOUT":    4,
		"WARNING":   5,
		"ERROR":     6,
		"STDERR":    7,
	}
)

func (x LogLevel) Enum() *LogLevel {
	p := new(LogLevel)
	*p = x
	return p
}

func (x LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_jolt_common_proto_enumTypes[0].Descriptor()
}

func (LogLevel) Type() protoreflect.EnumType {
	return &file_jolt_common_proto_enumTypes[0]
}

func (x LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogLevel.Descriptor instead.
func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_jolt_common_proto_rawDescGZIP(), []int{0}
}

type BuildStatus int32

const (
	BuildStatus_BUILD_ACCEPTED  BuildStatus = 0
	BuildStatus_BUILD_REJECTED  BuildStatus = 1
	BuildStatus_BUILD_COMPLETED BuildStatus = 3
	BuildStatus_BUILD_CANCELLED BuildStatus = 4
)

// Enum value maps for BuildStatus.
var (
	BuildStatus_name = map[int32]string{
		0: "BUILD_ACCEPTED",
		1: "BUILD_REJECTED",
		3: "BUILD_COMPLETED",
		4: "BUILD_CANCELLED",
	}
	BuildStatus_value = map[string]int32{
		"BUILD_ACCEPTED":  0,
		"BUILD_REJECTED":  1,
		"BUILD_COMPLETED": 3,
		"BUILD_CANCELLED": 4,
	}
)

func (x BuildStatus) Enum() *BuildStatus {
	p := new(BuildStatus)
	*p = x
	return p
}

func (x BuildStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BuildStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_jolt_common_proto_enumTypes[1].Descriptor()
}

func (BuildStatus) Type() protoreflect.EnumType {
	return &file_jolt_common_proto_enumTypes[1]
}

func (x BuildStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BuildStatus.Descriptor instead.
func (BuildStatus) EnumDescriptor() ([]byte, []int) {
	return file_jolt_common_proto_rawDescGZIP(), []int{1}
}

type TaskStatus int32

const (
	// The task is waiting to be executed.
	TaskStatus_TASK_QUEUED TaskStatus = 0
	// The task is currently running.
	TaskStatus_TASK_RUNNING TaskStatus = 1
	// The task execution was unsuccessful.
	TaskStatus_TASK_FAILED TaskStatus = 2
	// The task execution was successful.
	TaskStatus_TASK_PASSED TaskStatus = 3
	// The task failed, but the user is ok with failures.
	TaskStatus_TASK_UNSTABLE TaskStatus = 4
	// The task artifact was found in a remote cache and was downloaded
	// to the worker's local cache. No execution took place.
	TaskStatus_TASK_DOWNLOADED TaskStatus = 5
	// The task artifact was found in the worker's local cache and
	// got uploaded to a remote cache. No execution took place.
	TaskStatus_TASK_UPLOADED TaskStatus = 6
	// The task artifact was found in the cache and execution was skipped.
	TaskStatus_TASK_SKIPPED TaskStatus = 7
	// Execution was cancelled.
	TaskStatus_TASK_CANCELLED TaskStatus = 8
	// External circumstances prevented the task from running,
	// for example if the worker failed to deploy the Jolt client.
	TaskStatus_TASK_ERROR TaskStatus = 9
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "TASK_QUEUED",
		1: "TASK_RUNNING",
		2: "TASK_FAILED",
		3: "TASK_PASSED",
		4: "TASK_UNSTABLE",
		5: "TASK_DOWNLOADED",
		6: "TASK_UPLOADED",
		7: "TASK_SKIPPED",
		8: "TASK_CANCELLED",
		9: "TASK_ERROR",
	}
	TaskStatus_value = map[string]int32{
		"TASK_QUEUED":     0,
		"TASK_RUNNING":    1,
		"TASK_FAILED":     2,
		"TASK_PASSED":     3,
		"TASK_UNSTABLE":   4,
		"TASK_DOWNLOADED": 5,
		"TASK_UPLOADED":   6,
		"TASK_SKIPPED":    7,
		"TASK_CANCELLED":  8,
		"TASK_ERROR":      9,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_jolt_common_proto_enumTypes[2].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_jolt_common_proto_enumTypes[2]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_jolt_common_proto_rawDescGZIP(), []int{2}
}

// Representation of a single log line produced by a task.
type LogLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Log level
	Level LogLevel `protobuf:"varint,1,opt,name=level,proto3,enum=LogLevel" json:"level,omitempty"`
	// Time at which the log line was created (UTC)
	Time *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	// The context in which the log line was created.
	// This is typically the identity of the task that emitted the log.
	Context string `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
	// The log message
	Message string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *LogLine) Reset() {
	*x = LogLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jolt_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogLine) ProtoMessage() {}

func (x *LogLine) ProtoReflect() protoreflect.Message {
	mi := &file_jolt_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogLine.ProtoReflect.Descriptor instead.
func (*LogLine) Descriptor() ([]byte, []int) {
	return file_jolt_common_proto_rawDescGZIP(), []int{0}
}

func (x *LogLine) GetLevel() LogLevel {
	if x != nil {
		return x.Level
	}
	return LogLevel_EXCEPTION
}

func (x *LogLine) GetTime() *timestamp.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *LogLine) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *LogLine) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Key/value property
type Property struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Property) Reset() {
	*x = Property{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jolt_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Property) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Property) ProtoMessage() {}

func (x *Property) ProtoReflect() protoreflect.Message {
	mi := &file_jolt_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Property.ProtoReflect.Descriptor instead.
func (*Property) Descriptor() ([]byte, []int) {
	return file_jolt_common_proto_rawDescGZIP(), []int{1}
}

func (x *Property) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Property) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Worker platform properties (os, architecture, labels, etc).
type Platform struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Properties []*Property `protobuf:"bytes,1,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *Platform) Reset() {
	*x = Platform{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jolt_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Platform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Platform) ProtoMessage() {}

func (x *Platform) ProtoReflect() protoreflect.Message {
	mi := &file_jolt_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Platform.ProtoReflect.Descriptor instead.
func (*Platform) Descriptor() ([]byte, []int) {
	return file_jolt_common_proto_rawDescGZIP(), []int{2}
}

func (x *Platform) GetProperties() []*Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the task, without any parameters
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// SHA1 identity (influence)
	Identity string `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
	// UUID, unique for one invokation of the task.
	Instance string `protobuf:"bytes,3,opt,name=instance,proto3" json:"instance,omitempty"`
	// Arbitrary data added to influence idenitity.
	Taint string `protobuf:"bytes,4,opt,name=taint,proto3" json:"taint,omitempty"`
	// Properties that should be assigned to the task
	// Example use-cases are exported environment variables,
	// git commit sha, patches and other jolt.Export values.
	Properties []*Property `protobuf:"bytes,5,rep,name=properties,proto3" json:"properties,omitempty"`
	// Task platform requirements.
	// The task may request a specific type of workers by
	// specifying platform properties, such as:
	//  - node.os=linux
	//  - node.arch=amd64
	Platform *Platform `protobuf:"bytes,6,opt,name=platform,proto3" json:"platform,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jolt_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_jolt_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_jolt_common_proto_rawDescGZIP(), []int{3}
}

func (x *Task) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Task) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *Task) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *Task) GetTaint() string {
	if x != nil {
		return x.Taint
	}
	return ""
}

func (x *Task) GetProperties() []*Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Task) GetPlatform() *Platform {
	if x != nil {
		return x.Platform
	}
	return nil
}

// Representation of an error occuring in a task.
type TaskError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of error.
	// Typical values are "Exception", "Error", "Compiler Error", etc.
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// File and line where error was reported.
	Location string `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	// A short message describing the error.
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// A long message describing the error.
	// Typically callstacks or command outout.
	Details string `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *TaskError) Reset() {
	*x = TaskError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jolt_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskError) ProtoMessage() {}

func (x *TaskError) ProtoReflect() protoreflect.Message {
	mi := &file_jolt_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskError.ProtoReflect.Descriptor instead.
func (*TaskError) Descriptor() ([]byte, []int) {
	return file_jolt_common_proto_rawDescGZIP(), []int{4}
}

func (x *TaskError) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TaskError) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *TaskError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TaskError) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

// Details about a file.
type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Path to the file within the workspace.
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// The SHA1 digest of the file content.
	Digest string `protobuf:"bytes,2,opt,name=digest,proto3" json:"digest,omitempty"`
	// The content of the file.
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jolt_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_jolt_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_jolt_common_proto_rawDescGZIP(), []int{5}
}

func (x *File) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *File) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *File) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// A Jolt manifest project item.
type Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of project.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Paths to add to the system path.
	Paths []*Project_SystemPath `protobuf:"bytes,2,rep,name=paths,proto3" json:"paths,omitempty"`
	// List of project task recipes.
	Recipes []*Project_Recipe `protobuf:"bytes,3,rep,name=recipes,proto3" json:"recipes,omitempty"`
	// List of workspace resources.
	Resources []*Project_Resource `protobuf:"bytes,4,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *Project) Reset() {
	*x = Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jolt_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_jolt_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_jolt_common_proto_rawDescGZIP(), []int{6}
}

func (x *Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project) GetPaths() []*Project_SystemPath {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *Project) GetRecipes() []*Project_Recipe {
	if x != nil {
		return x.Recipes
	}
	return nil
}

func (x *Project) GetResources() []*Project_Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

type Workspace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Root of the workspace.
	Rootdir string `protobuf:"bytes,1,opt,name=rootdir,proto3" json:"rootdir,omitempty"`
	// Path to cache directory.
	Cachedir string `protobuf:"bytes,2,opt,name=cachedir,proto3" json:"cachedir,omitempty"`
	// List of files to be materialized in the workspace.
	Files []*File `protobuf:"bytes,3,rep,name=files,proto3" json:"files,omitempty"`
	// List of projects to load tasks from.
	Projects []*Project `protobuf:"bytes,4,rep,name=projects,proto3" json:"projects,omitempty"`
}

func (x *Workspace) Reset() {
	*x = Workspace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jolt_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Workspace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workspace) ProtoMessage() {}

func (x *Workspace) ProtoReflect() protoreflect.Message {
	mi := &file_jolt_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workspace.ProtoReflect.Descriptor instead.
func (*Workspace) Descriptor() ([]byte, []int) {
	return file_jolt_common_proto_rawDescGZIP(), []int{7}
}

func (x *Workspace) GetRootdir() string {
	if x != nil {
		return x.Rootdir
	}
	return ""
}

func (x *Workspace) GetCachedir() string {
	if x != nil {
		return x.Cachedir
	}
	return ""
}

func (x *Workspace) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *Workspace) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

// Description of the Jolt client that initiated the build.
type Client struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Version (x.y.z)
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Filesystem merkle tree digest for the client application
	// Currently not used.
	Tree string `protobuf:"bytes,2,opt,name=tree,proto3" json:"tree,omitempty"`
	// URL where client application may be downloaded
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	// List of Python package requirements
	// Each item may include a version specifier, e.g:
	//  - "pytest>=6"
	//  - "requests==2.28.0"
	Requirements []string `protobuf:"bytes,4,rep,name=requirements,proto3" json:"requirements,omitempty"`
}

func (x *Client) Reset() {
	*x = Client{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jolt_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client) ProtoMessage() {}

func (x *Client) ProtoReflect() protoreflect.Message {
	mi := &file_jolt_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client.ProtoReflect.Descriptor instead.
func (*Client) Descriptor() ([]byte, []int) {
	return file_jolt_common_proto_rawDescGZIP(), []int{8}
}

func (x *Client) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Client) GetTree() string {
	if x != nil {
		return x.Tree
	}
	return ""
}

func (x *Client) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Client) GetRequirements() []string {
	if x != nil {
		return x.Requirements
	}
	return nil
}

// Full description of a build.
// Shall include everything that is needed to deterministically
// distribute and reproduce the build.
type BuildEnvironment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Information about the Jolt client that initiated the build.
	Client *Client `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	// Information about the workspace that must be materialized
	// before any task execution can take place.
	Workspace *Workspace `protobuf:"bytes,2,opt,name=workspace,proto3" json:"workspace,omitempty"`
	// Configuration parameters (--config params.key=value).
	Parameters []*Property `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty"`
	// Overridden default task parameters.
	TaskDefaultParameters []string `protobuf:"bytes,4,rep,name=task_default_parameters,json=taskDefaultParameters,proto3" json:"task_default_parameters,omitempty"`
	// Map of tasks indexed by task SHA1 identity.
	Tasks map[string]*Task `protobuf:"bytes,5,rep,name=tasks,proto3" json:"tasks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Requested log level for the build.
	Loglevel LogLevel `protobuf:"varint,6,opt,name=loglevel,proto3,enum=LogLevel" json:"loglevel,omitempty"`
}

func (x *BuildEnvironment) Reset() {
	*x = BuildEnvironment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jolt_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildEnvironment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildEnvironment) ProtoMessage() {}

func (x *BuildEnvironment) ProtoReflect() protoreflect.Message {
	mi := &file_jolt_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildEnvironment.ProtoReflect.Descriptor instead.
func (*BuildEnvironment) Descriptor() ([]byte, []int) {
	return file_jolt_common_proto_rawDescGZIP(), []int{9}
}

func (x *BuildEnvironment) GetClient() *Client {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *BuildEnvironment) GetWorkspace() *Workspace {
	if x != nil {
		return x.Workspace
	}
	return nil
}

func (x *BuildEnvironment) GetParameters() []*Property {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *BuildEnvironment) GetTaskDefaultParameters() []string {
	if x != nil {
		return x.TaskDefaultParameters
	}
	return nil
}

func (x *BuildEnvironment) GetTasks() map[string]*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *BuildEnvironment) GetLoglevel() LogLevel {
	if x != nil {
		return x.Loglevel
	}
	return LogLevel_EXCEPTION
}

// System module path.
type Project_SystemPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Path to directory.
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Project_SystemPath) Reset() {
	*x = Project_SystemPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jolt_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_SystemPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_SystemPath) ProtoMessage() {}

func (x *Project_SystemPath) ProtoReflect() protoreflect.Message {
	mi := &file_jolt_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_SystemPath.ProtoReflect.Descriptor instead.
func (*Project_SystemPath) Descriptor() ([]byte, []int) {
	return file_jolt_common_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Project_SystemPath) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// A workspace resource
type Project_Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Alias to be created for the resource.
	Alias string `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	// Name of the resource task, including parameters.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Project_Resource) Reset() {
	*x = Project_Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jolt_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_Resource) ProtoMessage() {}

func (x *Project_Resource) ProtoReflect() protoreflect.Message {
	mi := &file_jolt_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_Resource.ProtoReflect.Descriptor instead.
func (*Project_Resource) Descriptor() ([]byte, []int) {
	return file_jolt_common_proto_rawDescGZIP(), []int{6, 1}
}

func (x *Project_Resource) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Project_Resource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Task recipe to be loaded.
type Project_Recipe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Path to the file.
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// Workdir for loaded tasks.
	Workdir string `protobuf:"bytes,3,opt,name=workdir,proto3" json:"workdir,omitempty"`
}

func (x *Project_Recipe) Reset() {
	*x = Project_Recipe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jolt_common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_Recipe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_Recipe) ProtoMessage() {}

func (x *Project_Recipe) ProtoReflect() protoreflect.Message {
	mi := &file_jolt_common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_Recipe.ProtoReflect.Descriptor instead.
func (*Project_Recipe) Descriptor() ([]byte, []int) {
	return file_jolt_common_proto_rawDescGZIP(), []int{6, 2}
}

func (x *Project_Recipe) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Project_Recipe) GetWorkdir() string {
	if x != nil {
		return x.Workdir
	}
	return ""
}

var File_jolt_common_proto protoreflect.FileDescriptor

var file_jolt_common_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6a, 0x6f, 0x6c, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8e, 0x01, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x6e, 0x65,
	0x12, 0x1f, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x09, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x32, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x08, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x22, 0xba, 0x01, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x69, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x6f, 0x0a,
	0x09, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x4c,
	0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69,
	0x67, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xb4, 0x02, 0x0a,
	0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x05,
	0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x74, 0x68,
	0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x07, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x73, 0x12, 0x2f, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x1a, 0x20, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x34, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x36, 0x0a, 0x06, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x6f, 0x72,
	0x6b, 0x64, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x6b,
	0x64, 0x69, 0x72, 0x22, 0x84, 0x01, 0x0a, 0x09, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x74, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x74, 0x64, 0x69, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x69, 0x72, 0x12, 0x1b, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x6c, 0x0a, 0x06, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x72,
	0x65, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xdc, 0x02, 0x0a, 0x10, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x28,
	0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x74, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x12,
	0x25, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x09, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x08, 0x6c, 0x6f,
	0x67, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x1a, 0x3f, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x6b, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x58, 0x43, 0x45, 0x50, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x56, 0x45, 0x52, 0x42, 0x4f, 0x53, 0x45, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e,
	0x46, 0x4f, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x44, 0x4f, 0x55, 0x54, 0x10, 0x04,
	0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x09, 0x0a,
	0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x44, 0x45,
	0x52, 0x52, 0x10, 0x07, 0x2a, 0x5f, 0x0a, 0x0b, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x41, 0x43, 0x43,
	0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x55, 0x49, 0x4c, 0x44,
	0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x42,
	0x55, 0x49, 0x4c, 0x44, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x13, 0x0a, 0x0f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c,
	0x4c, 0x45, 0x44, 0x10, 0x04, 0x2a, 0xc2, 0x01, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x51, 0x55, 0x45,
	0x55, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x52, 0x55,
	0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x41, 0x53, 0x4b, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x41, 0x53, 0x4b,
	0x5f, 0x50, 0x41, 0x53, 0x53, 0x45, 0x44, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x41, 0x53,
	0x4b, 0x5f, 0x55, 0x4e, 0x53, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f,
	0x54, 0x41, 0x53, 0x4b, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x45, 0x44, 0x10,
	0x05, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44,
	0x45, 0x44, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x4b, 0x49,
	0x50, 0x50, 0x45, 0x44, 0x10, 0x07, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x43,
	0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x08, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x41,
	0x53, 0x4b, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x09, 0x42, 0x0e, 0x5a, 0x0c, 0x70, 0x6b,
	0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_jolt_common_proto_rawDescOnce sync.Once
	file_jolt_common_proto_rawDescData = file_jolt_common_proto_rawDesc
)

func file_jolt_common_proto_rawDescGZIP() []byte {
	file_jolt_common_proto_rawDescOnce.Do(func() {
		file_jolt_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_jolt_common_proto_rawDescData)
	})
	return file_jolt_common_proto_rawDescData
}

var file_jolt_common_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_jolt_common_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_jolt_common_proto_goTypes = []interface{}{
	(LogLevel)(0),               // 0: LogLevel
	(BuildStatus)(0),            // 1: BuildStatus
	(TaskStatus)(0),             // 2: TaskStatus
	(*LogLine)(nil),             // 3: LogLine
	(*Property)(nil),            // 4: Property
	(*Platform)(nil),            // 5: Platform
	(*Task)(nil),                // 6: Task
	(*TaskError)(nil),           // 7: TaskError
	(*File)(nil),                // 8: File
	(*Project)(nil),             // 9: Project
	(*Workspace)(nil),           // 10: Workspace
	(*Client)(nil),              // 11: Client
	(*BuildEnvironment)(nil),    // 12: BuildEnvironment
	(*Project_SystemPath)(nil),  // 13: Project.SystemPath
	(*Project_Resource)(nil),    // 14: Project.Resource
	(*Project_Recipe)(nil),      // 15: Project.Recipe
	nil,                         // 16: BuildEnvironment.TasksEntry
	(*timestamp.Timestamp)(nil), // 17: google.protobuf.Timestamp
}
var file_jolt_common_proto_depIdxs = []int32{
	0,  // 0: LogLine.level:type_name -> LogLevel
	17, // 1: LogLine.time:type_name -> google.protobuf.Timestamp
	4,  // 2: Platform.properties:type_name -> Property
	4,  // 3: Task.properties:type_name -> Property
	5,  // 4: Task.platform:type_name -> Platform
	13, // 5: Project.paths:type_name -> Project.SystemPath
	15, // 6: Project.recipes:type_name -> Project.Recipe
	14, // 7: Project.resources:type_name -> Project.Resource
	8,  // 8: Workspace.files:type_name -> File
	9,  // 9: Workspace.projects:type_name -> Project
	11, // 10: BuildEnvironment.client:type_name -> Client
	10, // 11: BuildEnvironment.workspace:type_name -> Workspace
	4,  // 12: BuildEnvironment.parameters:type_name -> Property
	16, // 13: BuildEnvironment.tasks:type_name -> BuildEnvironment.TasksEntry
	0,  // 14: BuildEnvironment.loglevel:type_name -> LogLevel
	6,  // 15: BuildEnvironment.TasksEntry.value:type_name -> Task
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_jolt_common_proto_init() }
func file_jolt_common_proto_init() {
	if File_jolt_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_jolt_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jolt_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Property); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jolt_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Platform); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jolt_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jolt_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jolt_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jolt_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jolt_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Workspace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jolt_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Client); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jolt_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildEnvironment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jolt_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_SystemPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jolt_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jolt_common_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_Recipe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jolt_common_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_jolt_common_proto_goTypes,
		DependencyIndexes: file_jolt_common_proto_depIdxs,
		EnumInfos:         file_jolt_common_proto_enumTypes,
		MessageInfos:      file_jolt_common_proto_msgTypes,
	}.Build()
	File_jolt_common_proto = out.File
	file_jolt_common_proto_rawDesc = nil
	file_jolt_common_proto_goTypes = nil
	file_jolt_common_proto_depIdxs = nil
}
